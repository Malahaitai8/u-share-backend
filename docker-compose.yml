services:
  user_service:
    build: ./services/user_service
    container_name: user_service
    restart: on-failure
    depends_on:
      - db
    ports:
      - "8080:80"
    networks:
      - ushare_network

  image_rec_service:
    build:
      context: ./services/image_rec_service     # Dockerfile 所在路径
    container_name: image_rec_service
    restart: unless-stopped
    ports:
      - "8082:80"       # 左侧宿主机端口可改；右侧 80 必须与 Dockerfile 中 EXPOSE 保持一致
    networks:
      - ushare_network  # 与其它微服务同一个网络名称

  nlp_service:
    build:
      context: ./services/nlp_service
    container_name: nlp_service
    restart: unless-stopped
    env_file:
      - ./services/nlp_service/.env
    ports:
      - "8083:80"
    networks:
      - ushare_network

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: u-share-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Ushare!2025"
      MSSQL_DB: UFunUShareDB
    ports:
      - "1433:1433"
    volumes:
      - sql_server_data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Ushare!2025", "-d", "master", "-q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 40
    networks:
      - ushare_network

  kong-db:
    image: postgres:13
    container_name: kong-db
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: "Ushare!2025"
    volumes:
      - kong_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong", "-d", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ushare_network

  kong-migration:
    image: kong:latest
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: "Ushare!2025"
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - ushare_network

  kong-gateway:
    image: kong:latest
    container_name: kong-gateway
    depends_on:
      kong-migration:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: "Ushare!2025"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      # --- 这是解决 Kong DNS 问题的关键 ---
      KONG_DNS_RESOLVER: 127.0.0.11
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"
      - "8002:8002"
    networks:
      - ushare_network

volumes:
  sql_server_data:
  kong_db_data:

networks:
  ushare_network:
    driver: bridge